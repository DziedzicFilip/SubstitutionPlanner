CREATE DATABASE IF NOT EXISTS zarzadzanie_harmonogramem;
USE zarzadzanie_harmonogramem;

-- Tabela użytkowników
CREATE TABLE uzytkownicy (
    id INT AUTO_INCREMENT PRIMARY KEY,
    imie VARCHAR(50) NOT NULL,
    nazwisko VARCHAR(50) NOT NULL,
    login VARCHAR(50) UNIQUE NOT NULL,
    haslo VARCHAR(255) NOT NULL,
    rola ENUM('admin', 'pracownik') NOT NULL
);

-- Tabela grup pracowników
CREATE TABLE grupy (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nazwa VARCHAR(100) UNIQUE NOT NULL
);

-- Powiązanie pracownika z grupą
CREATE TABLE pracownik_grupa (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_pracownika INT,
    id_grupy INT,
    FOREIGN KEY (id_pracownika) REFERENCES uzytkownicy(id) ON DELETE CASCADE,
    FOREIGN KEY (id_grupy) REFERENCES grupy(id) ON DELETE CASCADE
);

-- Tabela harmonogramu pracy
CREATE TABLE harmonogram (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_pracownika INT,
    dzien ENUM('Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota', 'Niedziela') NOT NULL,
    godzina_od TIME NOT NULL,
    godzina_do TIME NOT NULL,
    FOREIGN KEY (id_pracownika) REFERENCES uzytkownicy(id) ON DELETE CASCADE
);

-- Tabela zastępstw
CREATE TABLE zastepstwa (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_pracownika_proszacego INT,
    id_pracownika_zastepujacego INT DEFAULT NULL,
    data_zastepstwa DATE NOT NULL,
    godzina_od TIME NOT NULL,
    godzina_do TIME NOT NULL,
    status ENUM('oczekujące', 'zatwierdzone', 'odrzucone') DEFAULT 'oczekujące',
    FOREIGN KEY (id_pracownika_proszacego) REFERENCES uzytkownicy(id) ON DELETE CASCADE,
    FOREIGN KEY (id_pracownika_zastepujacego) REFERENCES uzytkownicy(id) ON DELETE SET NULL
);

-- Tabela nadgodzin
CREATE TABLE nadgodziny (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_pracownika INT,
    liczba_godzin INT NOT NULL,
    data DATE NOT NULL,
    FOREIGN KEY (id_pracownika) REFERENCES uzytkownicy(id) ON DELETE CASCADE
);

-- Dodanie przykładowych użytkowników
INSERT INTO uzytkownicy (imie, nazwisko, login, haslo, rola) VALUES 
('Jan', 'Kowalski', 'admin1', 'admin123', 'admin'),
('Anna', 'Nowak', 'pracownik1', 'haslo123', 'pracownik'),
('Piotr', 'Wiśniewski', 'pracownik2', 'haslo456', 'pracownik');

-- Dodanie przykładowych grup
INSERT INTO grupy (nazwa) VALUES 
('Dział IT'),
('Obsługa klienta');

-- Przypisanie pracowników do grup
INSERT INTO pracownik_grupa (id_pracownika, id_grupy) VALUES 
(2, 1),
(3, 2);


